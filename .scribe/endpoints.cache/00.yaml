## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log in'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email address or username (Required when 'auth_field' value is 'email')."
        required: false
        example: user@demosite.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      auth_field:
        name: auth_field
        description: "The user's auth field ('email' or 'phone')."
        required: true
        example: email
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: "The user's mobile phone number (Required when 'auth_field' value is 'phone')."
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone_country:
        name: phone_country
        description: "The user's phone number's country code (Required when the 'phone' field is filled)."
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      captcha_key:
        name: captcha_key
        description: 'Key generated by the CAPTCHA endpoint calling (Required when the CAPTCHA verification is enabled from the Admin panel).'
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: user@demosite.com
      password: '123456'
      auth_field: email
      phone: null
      phone_country: null
      captcha_key: et
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"id":4,"name":"User Demo","username":null,"updated_at":"2024-06-08T17:42:14.000000Z","original_updated_at":"2024-06-08 17:42:14","original_last_activity":null,"created_at_formatted":"Feb 26th, 2022 at 04:57","photo_url":"https:\/\/jobclass.laraclassifier.local\/storage\/avatars\/us\/4\/thumb-800x800-5ba38963406e115066bd608fae520268.jpg","p_is_online":false,"country_flag_url":"https:\/\/jobclass.laraclassifier.local\/images\/flags\/rectangle\/16\/us.png","country_code":"US","language_code":"en","user_type_id":2,"gender_id":1,"photo":"avatars\/us\/4\/5ba38963406e115066bd608fae520268.jpg","about":"User Demo","auth_field":"email","email":"user@demosite.com","phone":"0019877656243","phone_national":"0019877656243","phone_country":"US","phone_hidden":0,"disable_comments":0,"create_from_ip":"142.1.86.91","latest_update_ip":null,"provider":null,"provider_id":null,"email_token":null,"phone_token":null,"email_verified_at":"2022-08-09T13:04:34.000000Z","phone_verified_at":"2022-08-09T13:04:34.000000Z","accept_terms":1,"accept_marketing_offers":0,"dark_mode":0,"time_zone":null,"featured":0,"blocked":0,"closed":0,"last_activity":"2024-06-08T17:42:14.896929Z","phone_intl":"0019877656243"},"extra":{"authToken":"2|dpPaHdfza5w4fRs0LNB8QeILBwB103toKCdMaAchba19e0c1","tokenType":"Bearer","isAdmin":false}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/auth/logout/{userId}'
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log out'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      userId:
        name: userId
        description: 'The ID of the user to logout.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      userId: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"You have been logged out. See you soon.","result":null}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a48v156E3ZhedVfgcD6kbaP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/password/email
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Forgot password'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email address or username (Required when 'auth_field' value is 'email')."
        required: false
        example: user@demosite.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      auth_field:
        name: auth_field
        description: "The user's auth field ('email' or 'phone')."
        required: true
        example: email
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: "The user's mobile phone number (Required when 'auth_field' value is 'phone')."
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone_country:
        name: phone_country
        description: "The user's phone number's country code (Required when the 'phone' field is filled)."
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      captcha_key:
        name: captcha_key
        description: 'Key generated by the CAPTCHA endpoint calling (Required when the CAPTCHA verification is enabled from the Admin panel).'
        required: false
        example: porro
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: user@demosite.com
      auth_field: email
      phone: null
      phone_country: null
      captcha_key: porro
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"We have emailed your password reset link!","result":null,"extra":{"codeSentTo":"email"}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/password/token
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset password token'
      description: 'Reset password token verification'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Verification code (received by SMS).'
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      code: null
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"success":false,"message":"The code field is required.","result":null,"errors":{"code":["The code field is required."]},"error":"- The code field is required.","error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/password/reset
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset password'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email address or username (Required when 'auth_field' value is 'email')."
        required: false
        example: john.doe@domain.tld
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      token:
        name: token
        description: ''
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: js!X07$z61hLA
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone_country:
        name: phone_country
        description: "The user's phone number's country code (Required when the 'phone' field is filled)."
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      auth_field:
        name: auth_field
        description: "The user's auth field ('email' or 'phone')."
        required: true
        example: email
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: "The user's mobile phone number (Required when 'auth_field' value is 'phone')."
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: "The confirmation of the user's password."
        required: true
        example: js!X07$z61hLA
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      captcha_key:
        name: captcha_key
        description: 'Key generated by the CAPTCHA endpoint calling (Required when the CAPTCHA verification is enabled from the Admin panel).'
        required: false
        example: soluta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: john.doe@domain.tld
      token: eos
      password: js!X07$z61hLA
      phone_country: null
      auth_field: email
      phone: null
      password_confirmation: js!X07$z61hLA
      captcha_key: soluta
    fileParameters: []
    responses:
      -
        status: 400
        content: '{"success":false,"message":"We can''t find a user with that e-mail address.","result":null,"error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/password/{id}/verify/resend/email'
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Email: Re-send link'
      description: 'Re-send email verification link to the user'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: 'The ID of the password.'
        required: true
        example: odio
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      entityId:
        name: entityId
        description: 'The entity/model identifier (ID).'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: odio
      entityId: null
    queryParameters:
      entitySlug:
        name: entitySlug
        description: "The slug of the entity to verify ('users' or 'posts')."
        required: false
        example: users
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      entitySlug: users
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"Entity ID not found.","result":null,"error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/password/{id}/verify/resend/sms'
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'SMS: Re-send code'
      description: 'Re-send mobile phone verification token by SMS'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: 'The ID of the password.'
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      entityId:
        name: entityId
        description: 'The entity/model identifier (ID).'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: dolores
      entityId: null
    queryParameters:
      entitySlug:
        name: entitySlug
        description: "The slug of the entity to verify ('users' or 'posts')."
        required: false
        example: users
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      entitySlug: users
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"Entity ID not found.","result":null,"error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/password/verify/{field}/{token?}'
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Verification
      description: "Verify the user's email address or mobile phone number"
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      field:
        name: field
        description: 'The field to verify.'
        required: true
        example: email
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      token:
        name: token
        description: 'The verification token.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      field: email
      token: null
    queryParameters:
      entitySlug:
        name: entitySlug
        description: "The slug of the entity to verify ('users' or 'posts')."
        required: false
        example: users
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      entitySlug: users
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: '{"success":false,"message":"The token or code to verify is empty.","result":null,"error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
