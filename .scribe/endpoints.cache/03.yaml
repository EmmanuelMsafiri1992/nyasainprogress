## Autogenerated by Scribe. DO NOT MODIFY.

name: Posts
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/postTypes
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List post types'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"data":[{"id":1,"name":"Full-time","active":1},{"id":2,"name":"Part-time","active":1},{"id":3,"name":"Temporary","active":1},{"id":4,"name":"Contract","active":1},{"id":5,"name":"Internship","active":1},{"id":6,"name":"Permanent","active":1},{"id":7,"name":"Optional","active":1}]}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/postTypes/{id}'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get post type'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The post type's ID."
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"id":1,"name":"Full-time","active":1}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reportTypes
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List report types'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"data":[{"id":1,"name":"Fraud"},{"id":2,"name":"Duplicate"},{"id":3,"name":"Spam"},{"id":4,"name":"Wrong category"},{"id":5,"name":"Other"}]}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/reportTypes/{id}'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get report type'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The report type's ID."
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"id":1,"name":"Fraud"}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/salaryTypes
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List salary types'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"data":[{"id":1,"name":"hour","active":1,"lft":null,"rgt":null,"depth":null},{"id":2,"name":"day","active":1,"lft":null,"rgt":null,"depth":null},{"id":3,"name":"month","active":1,"lft":null,"rgt":null,"depth":null},{"id":4,"name":"year","active":1,"lft":null,"rgt":null,"depth":null}]}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/salaryTypes/{id}'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get salary type'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The salary type's ID."
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"id":1,"name":"hour","active":1,"lft":null,"rgt":null,"depth":null}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/posts
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List posts'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      op:
        name: op
        description: 'Type of listings list (optional) - Possible value: search,premium,latest,free,premiumFirst,similar.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      postId:
        name: postId
        description: "Base Listing's ID to get similar listings (optional) - Mandatory to get similar listings (when op=similar)."
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      distance:
        name: distance
        description: "Distance to get similar listings (optional) - Also optional when the type of similar listings is based on the current listing's category. Mandatory when the type of similar listings is based on the current listing's location. So, its usage is limited to get similar listings (when op=similar) based on the current listing's location."
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      belongLoggedUser:
        name: belongLoggedUser
        description: 'Force users to be logged to get data that belongs to him. Authentication token needs to be sent in the header, and the "op" parameter needs to be null or unset - Possible value: 0 or 1.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pendingApproval:
        name: pendingApproval
        description: 'To list a user''s listings in pending approval. Authentication token needs to be sent in the header, and the "op" parameter needs to be null or unset - Possible value: 0 or 1.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      archived:
        name: archived
        description: 'To list a user''s archived posts. Authentication token needs to be sent in the header, and the "op" parameter need be null or unset - Possible value: 0 or 1.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      embed:
        name: embed
        description: 'Comma-separated list of the post relationships for Eager Loading - Possible values: user,category,parent,postType,city,currency,savedByLoggedUser,pictures,payment,package.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort:
        name: sort
        description: 'The sorting parameter (Order by DESC with the given column. Use "-" as prefix to order by ASC). Possible values: created_at.'
        required: false
        example: created_at
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      perPage:
        name: perPage
        description: 'Items per page. Can be defined globally from the admin settings. Cannot be exceeded 100.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      op: null
      postId: null
      distance: null
      belongLoggedUser: false
      pendingApproval: true
      archived: true
      embed: null
      sort: created_at
      perPage: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"data":[{"id":86,"country_code":"US","user_id":3,"payment_id":null,"company_id":66,"company_name":"Ferry, Braun And Hegmann","logo":"files\/us\/3\/ad505f852bb9c4348772dde512c7907d.png","company_description":"Facere eveniet omnis dolores et. Officia cum numquam dolor omnis. Et voluptate reprehenderit voluptatem consequatur. Quod omnis debitis natus temporibus perspiciatis.","category_id":7,"post_type_id":7,"title":"Vacation For Bank Teller Position","excerpt":"Consequatur sapiente autem ab ad quod illo commodi voluptate. Dicta ut voluptatem accusantium ut. Se...","description":"Consequatur sapiente autem ab ad quod illo commodi voluptate. Dicta ut voluptatem accusantium ut. Sed vel ullam rerum commodi fugiat minus. Ut sint repellendus et omnis. Enim omnis repellat nesciunt blanditiis. Repellendus fugit repudiandae nesciunt. Reiciendis dolorem autem doloribus laudantium delectus. Et quaerat aut qui nisi sunt suscipit laborum animi. Repellat eaque dolor et tenetur fuga vel quo. Repudiandae laudantium quibusdam enim. Quasi recusandae quis dignissimos dolores ullam esse. Esse omnis vel dolore modi ducimus. Et expedita repudiandae magnam delectus. Corporis laudantium molestiae possimus ad voluptatibus et. Atque voluptas labore nemo similique. Consectetur hic debitis iure nemo. Consequatur et aut sint modi odio. Rerum aperiam dolor officiis ut.","tags":["sit","nihil","quisquam"],"salary_min":"2.00","salary_max":"2422.00","salary_type_id":1,"currency_code":null,"negotiable":1,"start_date":"2024-06-24","application_url":null,"contact_name":"Company Demo","auth_field":"email","email":"company@demosite.com","phone":"001980877677","phone_national":"001980877677","phone_country":"US","phone_hidden":0,"city_id":45719,"lat":34.85,"lon":-82.45,"address":null,"create_from_ip":"173.250.99.161","latest_update_ip":null,"visits":22,"tmp_token":null,"email_token":null,"phone_token":"demoFaker","email_verified_at":"2024-06-08T10:41:56.000000Z","phone_verified_at":"2024-06-08T10:41:56.000000Z","accept_terms":1,"accept_marketing_offers":0,"reviewed_at":"2024-06-08T10:41:56.000000Z","featured":0,"archived":null,"archived_at":null,"archived_manually_at":null,"deletion_mail_sent_at":null,"partner":null,"created_at":"2024-06-08T10:57:30.000000Z","updated_at":"2024-06-06T07:48:45.000000Z","reference":"VWPe9rxaLyw","slug":"vacation-for-bank-teller-position","url":"https:\/\/jobclass.laraclassifier.local\/vacation-for-bank-teller-position\/VWPe9rxaLyw","phone_intl":"001980877677","created_at_formatted":"6 hours ago","user_photo_url":"https:\/\/jobclass.laraclassifier.local\/storage\/app\/default\/user.png","country_flag_url":"https:\/\/jobclass.laraclassifier.local\/images\/flags\/rectangle\/16\/us.png","salary_formatted":"$2 - $2,422","visits_formatted":"22 views","distance_info":null,"logo_url":{"full":"https:\/\/jobclass.laraclassifier.local\/storage\/files\/us\/3\/thumb-320x240-ad505f852bb9c4348772dde512c7907d.png","small":"https:\/\/jobclass.laraclassifier.local\/storage\/files\/us\/3\/thumb-120x90-ad505f852bb9c4348772dde512c7907d.png","medium":"https:\/\/jobclass.laraclassifier.local\/storage\/files\/us\/3\/thumb-320x240-ad505f852bb9c4348772dde512c7907d.png","large":"https:\/\/jobclass.laraclassifier.local\/storage\/files\/us\/3\/thumb-816x460-ad505f852bb9c4348772dde512c7907d.png"}},{"id":82,"country_code":"US","user_id":3,"payment_id":null,"company_id":66,"company_name":"Ferry, Braun And Hegmann","logo":"files\/us\/3\/ad505f852bb9c4348772dde512c7907d.png","company_description":"Facere eveniet omnis dolores et. Officia cum numquam dolor omnis. Et voluptate reprehenderit voluptatem consequatur. Quod omnis debitis natus temporibus perspiciatis.","category_id":10,"post_type_id":3,"title":"Porter Junior","excerpt":"Et non est officia quaerat debitis deleniti rerum. Quos modi aspernatur quis magni itaque esse sit c...","description":"Et non est officia quaerat debitis deleniti rerum. Quos modi aspernatur quis magni itaque esse sit commodi. Facere tempore unde pariatur expedita eius aut eum animi. Natus dolores quas tempora excepturi ullam. Cumque officiis voluptatem voluptate quia architecto. Nobis velit rem et nisi quia nihil.","tags":["id","illo","ut"],"salary_min":"15.00","salary_max":"2324.00","salary_type_id":2,"currency_code":null,"negotiable":0,"start_date":"2024-07-06","application_url":null,"contact_name":"Company Demo","auth_field":"email","email":"company@demosite.com","phone":"001980877677","phone_national":"001980877677","phone_country":"US","phone_hidden":0,"city_id":48734,"lat":40.21,"lon":-74.79,"address":null,"create_from_ip":"183.40.135.87","latest_update_ip":null,"visits":351,"tmp_token":null,"email_token":null,"phone_token":"demoFaker","email_verified_at":"2024-06-08T10:41:56.000000Z","phone_verified_at":"2024-06-08T10:41:56.000000Z","accept_terms":1,"accept_marketing_offers":0,"reviewed_at":"2024-06-08T10:41:56.000000Z","featured":1,"archived":null,"archived_at":"2024-06-08T10:41:56.000000Z","archived_manually_at":null,"deletion_mail_sent_at":null,"partner":null,"created_at":"2024-06-07T18:46:23.000000Z","updated_at":"2024-06-08T10:44:43.000000Z","reference":"qM7e5yBe2vp","slug":"porter-junior","url":"https:\/\/jobclass.laraclassifier.local\/porter-junior\/qM7e5yBe2vp","phone_intl":"001980877677","created_at_formatted":"22 hours ago","user_photo_url":"https:\/\/jobclass.laraclassifier.local\/storage\/app\/default\/user.png","country_flag_url":"https:\/\/jobclass.laraclassifier.local\/images\/flags\/rectangle\/16\/us.png","salary_formatted":"$15 - $2,324","visits_formatted":"351 views","distance_info":null,"logo_url":{"full":"https:\/\/jobclass.laraclassifier.local\/storage\/files\/us\/3\/thumb-320x240-ad505f852bb9c4348772dde512c7907d.png","small":"https:\/\/jobclass.laraclassifier.local\/storage\/files\/us\/3\/thumb-120x90-ad505f852bb9c4348772dde512c7907d.png","medium":"https:\/\/jobclass.laraclassifier.local\/storage\/files\/us\/3\/thumb-320x240-ad505f852bb9c4348772dde512c7907d.png","large":"https:\/\/jobclass.laraclassifier.local\/storage\/files\/us\/3\/thumb-816x460-ad505f852bb9c4348772dde512c7907d.png"}}],"links":{"first":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=1","last":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=98","prev":null,"next":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=2"},"meta":{"current_page":1,"from":1,"last_page":98,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=1","label":"1","active":true},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=2","label":"2","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=3","label":"3","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=4","label":"4","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=5","label":"5","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=6","label":"6","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=7","label":"7","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=8","label":"8","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=9","label":"9","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=10","label":"10","active":false},{"url":null,"label":"...","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=97","label":"97","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=98","label":"98","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/posts?page=2","label":"Next &raquo;","active":false}],"path":"https:\/\/jobclass.laraclassifier.local\/api\/posts","per_page":2,"to":2,"total":196}}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get post'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The post's ID."
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters:
      unactivatedIncluded:
        name: unactivatedIncluded
        description: 'Include or not unactivated entries - Possible value: 0 or 1.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
      belongLoggedUser:
        name: belongLoggedUser
        description: 'Force users to be logged to get data that belongs to him - Possible value: 0 or 1.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
      noCache:
        name: noCache
        description: 'Disable the cache for this request - Possible value: 0 or 1.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
      embed:
        name: embed
        description: 'Comma-separated list of the post relationships for Eager Loading - Possible values: user,category,parent,postType,city,currency,savedByLoggedUser,pictures,payment,package.'
        required: false
        example: 'user,postType'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      detailed:
        name: detailed
        description: "Allow getting the post's details with all its relationships (No need to set the 'embed' parameter)."
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      unactivatedIncluded: true
      belongLoggedUser: false
      noCache: false
      embed: 'user,postType'
      detailed: false
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"id":2,"country_code":"US","user_id":1,"payment_id":null,"company_id":19,"company_name":"Roberts Ltd","logo":"files\/us\/1\/b059bc2df06540267f802995c4f6110e.png","company_description":"Est est suscipit nihil ea saepe cupiditate voluptas. Vel praesentium consectetur est cum nemo labore ratione. Repellat error molestiae illo aperiam omnis quia rerum labore. Totam ea facilis deserunt ipsam nostrum aperiam voluptates.","category_id":8,"post_type_id":3,"title":"Ghostwriter","excerpt":"Tempora necessitatibus ut facere laborum iusto facere rerum. Neque voluptas non sed nihil dolore. Co...","description":"Tempora necessitatibus ut facere laborum iusto facere rerum. Neque voluptas non sed nihil dolore. Corporis et ut in amet. Distinctio qui rerum culpa aut. Enim quis velit optio ratione aut. Nulla doloribus a nostrum ut sequi. Sequi officia ullam ea cupiditate fugiat repellendus quia. In aperiam quae sunt sapiente ipsam dolorum. Rem et et enim ipsam. Labore vel eum id. Corporis non nihil et similique quisquam amet. Reiciendis maiores aspernatur officia quaerat quos perferendis placeat autem. Ipsa accusamus nihil sint autem. Eius perferendis esse quidem delectus sit rerum quia. Quis perspiciatis esse neque debitis ullam consequatur ratione.","tags":["voluptas","quidem","quas"],"salary_min":"4.00","salary_max":"24589.00","salary_type_id":4,"currency_code":null,"negotiable":0,"start_date":"2024-07-03","application_url":null,"contact_name":"Administrator","auth_field":"email","email":"admin@larapen.com","phone":"","phone_national":"","phone_country":"US","phone_hidden":0,"city_id":48741,"lat":41.21,"lon":-76,"address":null,"create_from_ip":"125.128.172.18","latest_update_ip":null,"visits":3613,"tmp_token":null,"email_token":null,"phone_token":"demoFaker","email_verified_at":"2024-06-08T10:41:49.000000Z","phone_verified_at":"2024-06-08T10:41:49.000000Z","accept_terms":1,"accept_marketing_offers":0,"reviewed_at":"2024-06-08T10:41:49.000000Z","featured":1,"archived":null,"archived_at":null,"archived_manually_at":null,"deletion_mail_sent_at":null,"partner":null,"created_at":"2024-05-19T00:56:12.000000Z","updated_at":"2024-06-08T17:43:21.000000Z","reference":"GWpmbk5ezJn","slug":"ghostwriter","url":"https:\/\/jobclass.laraclassifier.local\/ghostwriter\/GWpmbk5ezJn","phone_intl":"","created_at_formatted":"2 weeks ago","user_photo_url":"https:\/\/jobclass.laraclassifier.local\/storage\/app\/default\/user.png","country_flag_url":"https:\/\/jobclass.laraclassifier.local\/images\/flags\/rectangle\/16\/us.png","salary_formatted":"$4 - $24,589","visits_formatted":"3.6K views","distance_info":null,"logo_url":{"full":"https:\/\/jobclass.laraclassifier.local\/storage\/files\/us\/1\/thumb-320x240-b059bc2df06540267f802995c4f6110e.png","small":"https:\/\/jobclass.laraclassifier.local\/storage\/files\/us\/1\/thumb-120x90-b059bc2df06540267f802995c4f6110e.png","medium":"https:\/\/jobclass.laraclassifier.local\/storage\/files\/us\/1\/thumb-320x240-b059bc2df06540267f802995c4f6110e.png","large":"https:\/\/jobclass.laraclassifier.local\/storage\/files\/us\/1\/thumb-816x460-b059bc2df06540267f802995c4f6110e.png"},"user":{"id":1,"name":"Administrator","username":null,"updated_at":"2024-06-02T12:40:36.000000Z","original_updated_at":"2024-06-02 12:40:36","original_last_activity":null,"created_at_formatted":"2 years ago","photo_url":"https:\/\/jobclass.laraclassifier.local\/storage\/app\/default\/user.png","p_is_online":false,"country_flag_url":"https:\/\/jobclass.laraclassifier.local\/images\/flags\/rectangle\/16\/us.png","country_code":"US","language_code":"en","user_type_id":1,"gender_id":1,"photo":null,"about":"Administrator","auth_field":"email","email":"admin@larapen.com","phone":"","phone_national":"","phone_country":"bj","phone_hidden":0,"disable_comments":0,"create_from_ip":"200.54.134.83","latest_update_ip":"::1","provider":null,"provider_id":null,"email_verified_at":"2022-08-26T19:58:31.000000Z","phone_verified_at":"2022-08-31T17:42:13.000000Z","accept_terms":1,"accept_marketing_offers":0,"dark_mode":0,"time_zone":"Africa\/Lagos","featured":1,"blocked":0,"closed":0,"last_activity":"2024-06-08T17:43:21.359570Z","phone_intl":""},"postType":{"id":3,"name":"Temporary","active":1}}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/posts
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store post'
      description: |-
        For both types of post's creation (Single step or Multi steps).
        Note: The field 'admin_code' is only available when the post's country's 'admin_type' column is set to 1 or 2.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: "The category's ID."
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      post_type_id:
        name: post_type_id
        description: "The post type's ID."
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      title:
        name: title
        description: "The post's title."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: "The post's description."
        required: true
        example: 'Beatae placeat atque tempore consequatur animi magni omnis.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      salary_type_id:
        name: salary_type_id
        description: 'Must not be one of <code>0</code>.'
        required: true
        example: repudiandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      salary_min:
        name: salary_min
        description: 'This field is required when <code>salary_max</code> is present.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      salary_max:
        name: salary_max
        description: 'This field is required when <code>salary_min</code> is present.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_name:
        name: contact_name
        description: "The post's author name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      auth_field:
        name: auth_field
        description: "The user's auth field ('email' or 'phone')."
        required: true
        example: email
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: "The post's author mobile number (Required when 'auth_field' value is 'phone')."
        required: false
        example: '+17656766467'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone_country:
        name: phone_country
        description: "The user's phone number's country code (Required when the 'phone' field is filled)."
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      city_id:
        name: city_id
        description: "The city's ID."
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      start_date:
        name: start_date
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: "The post's author email address (Required when 'auth_field' value is 'email')."
        required: false
        example: john.doe@domain.tld
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      company:
        name: company
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      company.name:
        name: company.name
        description: ''
        required: true
        example: repellendus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      company.description:
        name: company.description
        description: ''
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      country_code:
        name: country_code
        description: "The code of the user's country."
        required: true
        example: US
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      company_id:
        name: company_id
        description: "The job company's ID."
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'company[].name':
        name: 'company[].name'
        description: "The company's name (required when 'company_id' is not set)."
        required: true
        example: 'Foo Inc'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'company[].logo':
        name: 'company[].logo'
        description: "The company's logo (available when 'company_id' is not set)."
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'company[].description':
        name: 'company[].description'
        description: "The company's description (required when 'company_id' is not set)."
        required: true
        example: 'Nostrum quia est aut quas.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      admin_code:
        name: admin_code
        description: "The administrative division's code."
        required: false
        example: '0'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      price:
        name: price
        description: 'The price.'
        required: true
        example: 5000
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      negotiable:
        name: negotiable
        description: 'Negotiable price or no.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone_hidden:
        name: phone_hidden
        description: 'Mobile phone number will be hidden in public or no.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
      create_from_ip:
        name: create_from_ip
        description: "The post's author IP address."
        required: false
        example: 127.0.0.1
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      accept_marketing_offers:
        name: accept_marketing_offers
        description: 'Accept to receive marketing offers or no.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      is_permanent:
        name: is_permanent
        description: 'Is it permanent post or no.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: 'Comma-separated tags list.'
        required: false
        example: 'car,automotive,tesla,cyber,truck'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      accept_terms:
        name: accept_terms
        description: 'Accept the website terms and conditions.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
      package_id:
        name: package_id
        description: "The package's ID."
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      payment_method_id:
        name: payment_method_id
        description: "The payment method's ID (required when the selected package's price is > 0)."
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      captcha_key:
        name: captcha_key
        description: 'Key generated by the CAPTCHA endpoint calling (Required when the CAPTCHA verification is enabled from the Admin panel).'
        required: false
        example: veritatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      category_id: 1
      post_type_id: 1
      title: 'John Doe'
      description: 'Beatae placeat atque tempore consequatur animi magni omnis.'
      salary_type_id: repudiandae
      contact_name: 'John Doe'
      auth_field: email
      phone: '+17656766467'
      phone_country: null
      city_id: 13
      email: john.doe@domain.tld
      company:
        name: repellendus
        description: enim
        0:
          name: 'Foo Inc'
          description: 'Nostrum quia est aut quas.'
      country_code: US
      company_id: 3
      admin_code: '0'
      price: 5000
      negotiable: false
      phone_hidden: false
      create_from_ip: 127.0.0.1
      accept_marketing_offers: true
      is_permanent: true
      tags: 'car,automotive,tesla,cyber,truck'
      accept_terms: false
      package_id: 2
      payment_method_id: 5
      captcha_key: veritatis
    fileParameters:
      company:
        -
          logo: null
    responses:
      -
        status: 422
        content: '{"success":false,"message":"\u27a4 The phone field contains an invalid number.\n\u27a4 The phone country field is required when phone is present.","errors":{"phone":["The phone field contains an invalid number."],"phone_country":["The phone country field is required when phone is present."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d6eahfv15k3VaZ4E6cbgP8D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/posts/{id}/offline'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Archive a listing'
      description: 'Put a listing offline'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The post/listing's ID."
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"Listing not found","result":null,"error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer edP1g8aVv5E6k4ahZfb3c6D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/posts/{id}/repost'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Repost a listing'
      description: 'Repost a listing by un-archiving it.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The post/listing's ID."
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"Listing not found","result":null,"error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6d5gP6kD1eZav8hfEV3ab4c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/posts/{id}'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update post'
      description: |-
        Note: The fields 'pictures', 'package_id' and 'payment_method_id' are only available with the single step post edition.
        The field 'admin_code' is only available when the post's country's 'admin_type' column is set to 1 or 2.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: "The post/listing's ID."
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: "The category's ID."
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      post_type_id:
        name: post_type_id
        description: "The post type's ID."
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      title:
        name: title
        description: "The post's title."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: "The post's description."
        required: true
        example: 'Beatae placeat atque tempore consequatur animi magni omnis.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      salary_type_id:
        name: salary_type_id
        description: 'Must not be one of <code>0</code>.'
        required: true
        example: aspernatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      salary_min:
        name: salary_min
        description: 'This field is required when <code>salary_max</code> is present.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      salary_max:
        name: salary_max
        description: 'This field is required when <code>salary_min</code> is present.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      contact_name:
        name: contact_name
        description: "The post's author name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      auth_field:
        name: auth_field
        description: "The user's auth field ('email' or 'phone')."
        required: true
        example: email
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: "The post's author mobile number (Required when 'auth_field' value is 'phone')."
        required: false
        example: '+17656766467'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone_country:
        name: phone_country
        description: "The user's phone number's country code (Required when the 'phone' field is filled)."
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      city_id:
        name: city_id
        description: "The city's ID."
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      start_date:
        name: start_date
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: "The post's author email address (Required when 'auth_field' value is 'email')."
        required: false
        example: john.doe@domain.tld
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      company:
        name: company
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      company.name:
        name: company.name
        description: ''
        required: true
        example: tenetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      company.description:
        name: company.description
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      country_code:
        name: country_code
        description: "The code of the user's country."
        required: true
        example: US
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      company_id:
        name: company_id
        description: "The job company's ID."
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'company[].name':
        name: 'company[].name'
        description: "The company's name (required when 'company_id' is not set)."
        required: true
        example: 'Foo Inc'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'company[].logo':
        name: 'company[].logo'
        description: "The company's logo (available when 'company_id' is not set)."
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'company[].description':
        name: 'company[].description'
        description: "The company's description (required when 'company_id' is not set)."
        required: true
        example: 'Nostrum quia est aut quas.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      admin_code:
        name: admin_code
        description: "The administrative division's code."
        required: false
        example: '0'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      price:
        name: price
        description: 'The price.'
        required: true
        example: 5000
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      negotiable:
        name: negotiable
        description: 'Negotiable price or no.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone_hidden:
        name: phone_hidden
        description: 'Mobile phone number will be hidden in public or no.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
      latest_update_ip:
        name: latest_update_ip
        description: "The post's author IP address."
        required: false
        example: 127.0.0.1
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      accept_marketing_offers:
        name: accept_marketing_offers
        description: 'Accept to receive marketing offers or no.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      is_permanent:
        name: is_permanent
        description: 'Is it permanent post or no.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: 'Comma-separated tags list.'
        required: false
        example: 'car,automotive,tesla,cyber,truck'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      accept_terms:
        name: accept_terms
        description: 'Accept the website terms and conditions.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
      package_id:
        name: package_id
        description: "The package's ID."
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      payment_method_id:
        name: payment_method_id
        description: "The payment method's ID (required when the selected package's price is > 0)."
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      category_id: 1
      post_type_id: 1
      title: 'John Doe'
      description: 'Beatae placeat atque tempore consequatur animi magni omnis.'
      salary_type_id: aspernatur
      contact_name: 'John Doe'
      auth_field: email
      phone: '+17656766467'
      phone_country: null
      city_id: 8
      email: john.doe@domain.tld
      company:
        name: tenetur
        description: est
        0:
          name: 'Foo Inc'
          description: 'Nostrum quia est aut quas.'
      country_code: US
      company_id: 8
      admin_code: '0'
      price: 5000
      negotiable: false
      phone_hidden: false
      latest_update_ip: 127.0.0.1
      accept_marketing_offers: false
      is_permanent: true
      tags: 'car,automotive,tesla,cyber,truck'
      accept_terms: false
      package_id: 2
      payment_method_id: 5
    fileParameters:
      company:
        -
          logo: null
    responses:
      -
        status: 422
        content: '{"success":false,"message":"\u27a4 The phone field contains an invalid number.\n\u27a4 The phone country field is required when phone is present.","errors":{"phone":["The phone field contains an invalid number."],"phone_country":["The phone country field is required when phone is present."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bgEZc56dDVe6P43f1kaah8v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{ids}'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete post(s)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      ids:
        name: ids
        description: 'The ID or comma-separated IDs list of post(s).'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      ids: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"API endpoint not found."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h4bPa6d8a3Vfv1D5keEgcZ6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}/verify/resend/email'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Email: Re-send link'
      description: 'Re-send email verification link to the user'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      entityId:
        name: entityId
        description: 'The entity/model identifier (ID).'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
      entityId: null
    queryParameters:
      entitySlug:
        name: entitySlug
        description: "The slug of the entity to verify ('users' or 'posts')."
        required: false
        example: users
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      entitySlug: users
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":false,"message":"Your Email Address is already verified.","result":null,"extra":{"emailVerificationSent":false},"error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}/verify/resend/sms'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'SMS: Re-send code'
      description: 'Re-send mobile phone verification token by SMS'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      entityId:
        name: entityId
        description: 'The entity/model identifier (ID).'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
      entityId: null
    queryParameters:
      entitySlug:
        name: entitySlug
        description: "The slug of the entity to verify ('users' or 'posts')."
        required: false
        example: users
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      entitySlug: users
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":false,"message":"Your Phone Number is already verified.","result":null,"extra":{"phoneVerificationSent":false},"error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/verify/{field}/{token?}'
    metadata:
      groupName: Posts
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Verification
      description: "Verify the user's email address or mobile phone number"
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      field:
        name: field
        description: 'The field to verify.'
        required: true
        example: email
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      token:
        name: token
        description: 'The verification token.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      field: email
      token: null
    queryParameters:
      entitySlug:
        name: entitySlug
        description: "The slug of the entity to verify ('users' or 'posts')."
        required: false
        example: users
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      entitySlug: users
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: '{"success":false,"message":"The token or code to verify is empty.","result":null,"error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
