## Autogenerated by Scribe. DO NOT MODIFY.

name: Threads
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/threads
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store thread'
      description: 'Start a conversation. Creation of a new thread.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The thread's creator name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      auth_field:
        name: auth_field
        description: "The user's auth field ('email' or 'phone')."
        required: true
        example: email
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: "The thread's creator email address (Required when 'auth_field' value is 'email')."
        required: false
        example: john.doe@domain.tld
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: "The thread's creator mobile phone number (Required when 'auth_field' value is 'phone')."
        required: false
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone_country:
        name: phone_country
        description: "The user's phone number's country code (Required when the 'phone' field is filled)."
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      body:
        name: body
        description: 'The name of the user.'
        required: true
        example: 'Modi temporibus voluptas expedita voluptatibus voluptas veniam.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      post_id:
        name: post_id
        description: 'The related post ID.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      resume:
        name: resume
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      resume.filename:
        name: resume.filename
        description: 'Must be at least 0 characters. Must not be greater than 1500 characters.'
        required: true
        example: vgmggodexbalsobrmng
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      filename:
        name: filename
        description: 'The thread attached file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      captcha_key:
        name: captcha_key
        description: 'Key generated by the CAPTCHA endpoint calling (Required when the CAPTCHA verification is enabled from the Admin panel).'
        required: false
        example: iste
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      auth_field: email
      email: john.doe@domain.tld
      phone: voluptas
      phone_country: null
      body: 'Modi temporibus voluptas expedita voluptatibus voluptas veniam.'
      post_id: 2
      resume:
        filename: vgmggodexbalsobrmng
      captcha_key: iste
    fileParameters:
      filename: null
    responses:
      -
        status: 422
        content: '{"success":false,"message":"\u27a4 The resume file must be a file of type: pdf, doc, docx, word, rtf, rtx, ppt, pptx, odt, odp, wps, jpeg, jpg, bmp, png.","errors":{"resume.filename":["The resume file must be a file of type: pdf, doc, docx, word, rtf, rtx, ppt, pptx, odt, odp, wps, jpeg, jpg, bmp, png."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/threads
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List threads'
      description: |-
        Get all logged user's threads
        Filters:
        - unread: Get the logged user's unread threads
        - started: Get the logged user's started threads
        - important: Get the logged user's make as important threads
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      filter:
        name: filter
        description: 'Filter for the list - Possible value: unread, started or important.'
        required: false
        example: unread
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      embed:
        name: embed
        description: 'Comma-separated list of the post relationships for Eager Loading - Possible values: post.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      perPage:
        name: perPage
        description: 'Items per page. Can be defined globally from the admin settings. Cannot be exceeded 100.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      filter: unread
      embed: null
      perPage: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"No threads found","result":{"data":[],"links":{"first":"https:\/\/jobclass.laraclassifier.local\/api\/threads?page=1","last":"https:\/\/jobclass.laraclassifier.local\/api\/threads?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/threads?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"https:\/\/jobclass.laraclassifier.local\/api\/threads","per_page":2,"to":null,"total":0}}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dDPa1ek6VgEf354b6Z8vhca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/threads/{id}'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get thread'
      description: 'Get a thread (owned by the logged user) details'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: 'The thread ID.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters:
      embed:
        name: embed
        description: 'Comma-separated list of the post relationships for Eager Loading - Possible values: user,post,messages,participants.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      embed: null
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"Thread not found","result":null,"error":"Thread not found","error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zfdh6v1cPV3a4gaE5eb8kD6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/threads/{id}'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update thread'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: 'The ID of the thread.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'The name of the user.'
        required: true
        example: 'Modi temporibus voluptas expedita voluptatibus voluptas veniam.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      filename:
        name: filename
        description: 'The thread attached file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      body: 'Modi temporibus voluptas expedita voluptatibus voluptas veniam.'
    fileParameters:
      filename: null
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Your reply has been sent. Thank you!","result":{"id":1,"post_id":1368,"subject":"Area Sales Manager","updated_at":"2024-06-08T10:45:10.000000Z","latest_message":{"id":2120,"thread_id":1,"user_id":4,"body":"Modi temporibus voluptas expedita voluptatibus voluptas veniam.","filename":"files\/us\/1368\/applications\/1343b1b5c397d8a121e5fe38e5f1ea48.jpg","deleted_by":null,"deleted_at":null,"created_at":"2024-06-08T17:43:56.000000Z","updated_at":"2024-06-08T17:43:56.000000Z","created_at_formatted":"Jun 8th, 2024 at 17:43","p_recipient":{"id":1,"thread_id":1,"user_id":1583,"last_read":"2024-06-08 10:45:10","is_important":0,"deleted_at":null,"created_at":"2024-06-08T10:45:10.000000Z","updated_at":"2024-06-08T10:45:10.000000Z","created_at_formatted":"Jun 8th, 2024 at 10:45"}},"p_is_unread":true,"p_creator":{"id":4,"country_code":"US","language_code":"en","user_type_id":2,"gender_id":1,"name":"User Demo","photo":"avatars\/us\/4\/5ba38963406e115066bd608fae520268.jpg","about":"User Demo","auth_field":"email","phone":"0019877656243","phone_national":"0019877656243","phone_country":"US","phone_hidden":0,"username":null,"email":"user@demosite.com","is_admin":0,"can_be_impersonated":1,"disable_comments":0,"create_from_ip":"142.1.86.91","latest_update_ip":null,"provider":null,"provider_id":null,"email_token":null,"phone_token":null,"email_verified_at":"2022-08-09T13:04:34.000000Z","phone_verified_at":"2022-08-09T13:04:34.000000Z","accept_terms":1,"accept_marketing_offers":0,"dark_mode":0,"time_zone":null,"featured":0,"blocked":0,"closed":0,"last_activity":"2024-06-08T17:43:56.487189Z","last_login_at":"2024-04-15T11:49:22.000000Z","deleted_at":"2024-06-08T17:43:56.489580Z","created_at":"2022-02-26T04:57:00.000000Z","updated_at":"2024-04-15T11:49:22.000000Z","phone_intl":"0019877656243","created_at_formatted":"Feb 26th, 2022 at 04:57","photo_url":"https:\/\/jobclass.laraclassifier.local\/storage\/avatars\/us\/4\/thumb-800x800-5ba38963406e115066bd608fae520268.jpg","original_updated_at":"2024-04-15 11:49:22","original_last_activity":null,"p_is_online":false,"country_flag_url":"https:\/\/jobclass.laraclassifier.local\/images\/flags\/rectangle\/16\/us.png","remaining_posts":null},"p_is_important":false}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f86hV6aeZav4dP3Ecg1b5Dk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/threads/{ids}'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete thread(s)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      ids:
        name: ids
        description: 'The ID or comma-separated IDs list of thread(s).'
        required: true
        example: saepe
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      ids: saepe
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"API endpoint not found."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vfhk5ZPD3gc6e4b1aEd8va6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/threads/bulkUpdate/{ids?}'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk updates'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      ids:
        name: ids
        description: 'The ID or comma-separated IDs list of thread(s).'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      ids: aut
    queryParameters:
      type:
        name: type
        description: 'The type of action to execute (markAsRead, markAsUnread, markAsImportant, markAsNotImportant or markAllAsRead).'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      type: voluptatem
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"API endpoint not found."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kcZe65g36Edh8vab1PaDfV4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/threads/{threadId}/messages'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List messages'
      description: "Get all thread's messages"
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      threadId:
        name: threadId
        description: "The thread's ID."
        required: true
        example: 293
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      threadId: 293
    queryParameters:
      embed:
        name: embed
        description: 'Comma-separated list of the post relationships for Eager Loading - Possible values: user.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort:
        name: sort
        description: 'The sorting parameter (Order by DESC with the given column. Use "-" as prefix to order by ASC). Possible values: created_at.'
        required: false
        example: created_at
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      perPage:
        name: perPage
        description: 'Items per page. Can be defined globally from the admin settings. Cannot be exceeded 100.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      embed: null
      sort: created_at
      perPage: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"No messages found","result":{"data":[],"links":{"first":"https:\/\/jobclass.laraclassifier.local\/api\/threads\/293\/messages?page=1","last":"https:\/\/jobclass.laraclassifier.local\/api\/threads\/293\/messages?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"https:\/\/jobclass.laraclassifier.local\/api\/threads\/293\/messages?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"https:\/\/jobclass.laraclassifier.local\/api\/threads\/293\/messages","per_page":2,"to":null,"total":0}}}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vcV16Ddab8fa5hZgEe4Pk63'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/threads/{threadId}/messages/{id}'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get message'
      description: "Get a thread's message (owned by the logged user) details"
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: a25ydDlKdDRwT2wzYjAxV1hvc0hSUmQxYklTTE1pRHU=
      X-AppType: docs
    urlParameters:
      threadId:
        name: threadId
        description: "The thread's ID."
        required: true
        example: 293
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      id:
        name: id
        description: "The thread's message's ID."
        required: true
        example: 3545
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      threadId: 293
      id: 3545
    queryParameters:
      embed:
        name: embed
        description: 'Comma-separated list of the post relationships for Eager Loading - Possible values: thread,user.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      embed: null
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"Message not found","result":null,"error":"Message not found","error_code":1}'
        headers:
          content-type: 'application/json; charset=UTF-8'
          cache-control: 'no-cache, private'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PaE5Zdg1Vhkav4fe6Dcb368'
    controller: null
    method: null
    route: null
    custom: []
